* DONE add typescript
LOGBOOK:
CLOCK: [2022-03-16 Wed 19:50]--[2022-03-16 Wed 19:57] =>  0:07
:END:
* DONE Create hello world koa server
:LOGBOOK:
CLOCK: [2022-03-16 Wed 20:07]--[2022-03-16 Wed 20:09] =>  0:02
CLOCK: [2022-03-16 Wed 19:57]--[2022-03-16 Wed 20:07] =>  0:10
:END:
* DONE return json in koa
:LOGBOOK:
CLOCK: [2022-03-16 Wed 20:10]--[2022-03-16 Wed 20:12] =>  0:02
:END:
* DONE add unit testing library
:LOGBOOK:
CLOCK: [2022-03-16 Wed 20:13]--[2022-03-16 Wed 20:43] =>  0:30
:END:
- doing tdd
- going to add jest, simple to use and setup
- need to add babel in order to support typescript
* DONE Find xml library
:LOGBOOK:
CLOCK: [2022-03-16 Wed 20:44]--[2022-03-16 Wed 21:07] =>  0:23
:END:
- good xml library that is maintained by the community: https://www.npmjs.com/package/fast-xml-parser
- write test code to fetch the xml and parse it into json
- just make sure there are no errors and the parsing is successful
- logic will be implemented in another commit
- adding http library instead of using the built in node because this will lead to more maintainable code
- experience with the node http library based local implementations is that everyone writes a slightly different API
- much better to use the community maintained axios
  - which is also familiar to frontend devs
- decided to install axios
- added unit test to test getting xml data 
* TODO fetch data from xml endpoint
- the xml data is 1MB
* TODO convert xml into pl format
* TODO study output format 
* TODO write function to transform pl format to json
* TODO create mongodb docker scripts
* TODO store information in mongodb
* TODO expose api
* TODO package into docker compose
* TODO test docker compose version
* EXTRA
** TODO deploy to a hosted site
** TODO add ci
- build, test, push image
** TODO add cd
- pull new image
- update deployment
** TODO Add scheduled job to update data in db
- treat the db as cache
** TODO add unit tests for all logic functions
** TODO use https for security